#include <stdio.h>
#include <stdlib.h>

typedef struct s_stack_node
{
    int value;
    struct s_stack_node *next;
    struct s_stack_node *prev;
} t_stack_node;

int stack_len(t_stack_node *stack)
{
    int count;

    count = 0;
    if(!stack)
        return ;
    while( stack)
    {
        stack = stack->next;
        count++;
    }
    return (count);
}


ft_rotate(t_stack_node **head)
{
    int i;
    t_stack_node **last;

    i = 0;
    last = head;
    i = stack_len(*head);
    while(i>1)
    {
        (*last)=(*head)->next;
        i--;
    } 
    (*head)->next->prev = (*last);
    (*last)->next = (*head);
    (*head)->next = NULL;
    (*head)->next->prev = NULL;
   
}

t_stack_node *ft_create_node(int value)
{
    t_stack_node *new_node = malloc(sizeof(t_stack_node));
    if (!new_node)
        return NULL;
    new_node->value = value;
    new_node->next = NULL;
    new_node->prev = NULL;
    return new_node;
}

void ft_push(t_stack_node **head, int value)
{
    t_stack_node *new_node = ft_create_node(value);
    if (!new_node)
        return;
    if (*head)
    {
        new_node->next = *head;
        (*head)->prev = new_node;
    }
    *head = new_node;
}



int main(void)
{
    t_stack_node *a = NULL;

    ft_push(&a, 3);
    ft_push(&a, 2);
    ft_push(&a, 1);

    ft_rotate(&a);


    return 0;
}
